- name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y
  - name: install nodejs
    ansible.builtin.dnf:
      name: "{{item}}"
      state: latest
    loop:
    - nodejs
    - mysql
  - name: create user
    ansible.builtin.user:
      name: expense
  - name: create directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: download backend code
    ansible.builtin.get_url:
      url:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app
  - name: copy the backend service file
    ansible.builtin.template:
      src: backend.service.j2
      dest: /etc/systemd/system/backend.service


  - name: installing mysql python dependencies
    ansible.builtin.pip:
      name:
      - PyMySql
      - cryptography
      executable: pip3.9

  - name: import the data
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ login_passwword }}""
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all
  - name: deamon relaod
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: start and enable the backend
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes
